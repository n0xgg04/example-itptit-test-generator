import GENERATE_VALUE_TYPE from "../enums/datatypes";
import Effect from "../enums/effect";
/**
 * Repeat generate a test case template
 * @param time - x times repeat
 * @constructor
 */
export function Loop(time) {
    return function (target, propertyKey) {
        const metadataKey = `effect:${propertyKey.toString()}`;
        const objEffect = Reflect.hasMetadata("effect", target)
            ? Reflect.getMetadata("effect", target)
            : [];
        if (!objEffect.includes(propertyKey.toString())) {
            Reflect.defineMetadata("effect", [...objEffect, propertyKey.toString()], target);
        }
        const effectList = Reflect.hasMetadata(metadataKey, target)
            ? Reflect.getMetadata(metadataKey, target)
            : [];
        Reflect.defineMetadata(metadataKey, [...effectList, Effect.Loop], target);
        Reflect.defineMetadata(`${metadataKey}:time`, time, target);
        Reflect.defineMetadata(`datatype:${String(propertyKey)}`, {
            type: GENERATE_VALUE_TYPE.Loop
        }, target);
    };
}
